/*
 * Amlogic Ltd. GXBaby Plaform
 *
 */

/dts-v1/;

#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/clock/gxbb.h>
#include <dt-bindings/gpio/gxbb.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/reset/aml_gxbb.h>
#include "mesongxbb.dtsi"
/ {
	model = "Amlogic";
	compatible = "amlogic, Gxbb";
	interrupt-parent = <&gic>;
	#address-cells = <2>;
	#size-cells = <2>;

	aliases {
		serial0 = &uart_AO;
		serial1 = &uart_A;
	};

	gpu_dvfs_tbl:gpu_dvfs_tbl {
		sc_mpp = <3>;/* number of pp used most of time.*/
		tbl = <&clk250_cfg &clk400_cfg &clk500_cfg &clk666_cfg &clk800_cfg>;
	};

	memory@00000000 {
		device_type = "memory";
		linux,usable-memory = <0x0 0x1000000 0x0 0x3f000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		/* global autoconfigured region for contiguous allocations */
		secmon_reserved:linux,secmon {
			compatible = "aml_secmon_memory";
			reg = <0x0 0x10000000 0x0 0x200000>;
			no-map;
		};

		fb_reserved:linux,meson-fb {
			compatible = "amlogic, fb-memory";
			size = <0x0 0x2000000>;
			no-map;
		};

		/*  DISP&MM-A/V stream */
		streambuf_reserved:linux,mesonstream {
			compatible = "amlogic, stream-memory";
			size = <0x0 0x2000000>;
			no-map;
		};

		ion_reserved:linux,ion-dev {
			compatible = "amlogic, idev-mem";
			size = <0x0 0x2000000>;
		};

		/*  DISP&MM-A/V stream */
		vdec_reserved:linux,vdec {
			compatible = "amlogic, vdec-memory";
			size = <0x0 0x0ca00000>;
			no-map;
		};
		/*  vdin0 */
//		vdin0_reserved:linux,vdin0 {
//			compatible = "amlogic, vdin_memory";
			/* 1920x1080x2x4  =17M */
//			size = <0x0 0x01000000>;
//		};
		 /*  vdin1 */
//		vdin1_reserved:linux,vdin1 {
//			compatible = "amlogic, vdin_memory";
			/* 1920x1080x2x4  =17M */
//			size = <0x0 0x01000000>;
//		};
		/*  PICDEC reserved memory */
		picdec_reserved:linux,picdec {
			compatible = "amlogic, picdec_memory";
			size = <0x0 0x1000000>;
			//no-map;
		};
        /*  POST PROCESS MANAGER */
        ppmgr_reserved:linux,ppmgr {
            compatible = "amlogic, ppmgr_memory";
            size = <0x0 0x2000000>;
        };
		/* AVC Encode CMA pool */
		avc_cma_reserved:linux,avc_cma {
			compatible = "amlogic, avc-cma-memory";
			reusable;
			size = <0x0 0x1200000>;
			alignment = <0x0 0x400000>;
			linux,contiguous-region;
		};
	};

	meson-vout {
		compatible = "amlogic, meson-vout";
		dev_name = "meson-vout";
		status = "okay";
	};
	meson-fb {
		compatible = "amlogic, meson-fb";
		memory-region = <&fb_reserved>;
		dev_name = "meson-fb";
		status = "okay";
		interrupts = <0 3 1
			0 89 1>;
		interrupt-names = "viu-vsync", "rdma";
		mem_size = <0x01800000 0x00100000>; /* fb0/fb1 memory size */
		vmode = <3>; /** 0:VMODE_720P 1:VMODE_LCD 2:VMODE_LVDS_1080P 3:VMODE_1080P */
		scale_mode = <1>; /** 0:VPU free scale 1:OSD free scale 2:OSD super scale */
		display_size_default = <1920 1080 1920 3240 32>; //1920*1080*4*3 = 0x17BB000
	};
	ge2d {
		compatible = "amlogic, ge2d";
		dev_name = "ge2d";
		status = "okay";
		interrupts = <0 150 1>;
		interrupt-names = "ge2d";
		/*
		resets = <&clock GCLK_IDX_GE2D>;
		reset-names = "ge2d";
		*/
	};
	codec_io {
		compatible = "amlogic, codec_io";
		#address-cells=<2>;
		#size-cells=<2>;
		ranges;
		io_cbus_base{
			reg = <0x0 0xC1100000 0x0 0x100000>;
		};
		io_dos_base{
			reg = <0x0 0xc8820000 0x0 0x10000>;
		};
		io_hiubus_base{
			reg = <0x0 0xc883c000 0x0 0x2000>;
		};
		io_aobus_base{
			reg = <0x0 0xc8100000 0x0 0x100000>;
		};
		io_vcbus_base{
			reg = <0x0 0xd0100000 0x0 0x40000>;
		};
		io_dmc_base{
			reg = <0x0 0xc8838000 0x0 0x400>;
		};
	};
	ethmac: ethernet@0xc9410000{
                compatible = "amlogic, gxbb-rmii-dwmac";
                reg = <0x0 0xc9410000 0x0 0x10000
                0x0 0xc8834540 0x0 0x8>;
                interrupts = <0 8 1>;
                phy-mode= "rmii";
                pinctrl-names = "eth_pins";
                pinctrl-0 = <&eth_pins>;
                rst_pin-gpios = <&gpio GPIOZ_14 0>;
                mc_val = <0x1808>;
                resets = <&clock GCLK_IDX_ETHERNET>;
                reset-names = "ethpower";
                interrupt-names = "macirq";
                clocks = <&clock CLK_81>;
                clock-names = "ethclk81";
        };
	meson-remote {
		compatible = "amlogic, aml_remote";
		dev_name = "meson-remote";
 		status = "ok";
		remote_ao_offset = <0x580>; /* 0x400 + (0x20 + idx)<<2 -- old ; 0x400 + (0x60 +idx)<<2 --new   */
		interrupts = <0 196 1>;
 		pinctrl-names = "default";
 		pinctrl-0 = <&remote_pins>;
 		};
	mesonstream {
		compatible = "amlogic, codec, streambuf";
		memory-region = <&streambuf_reserved>;
		dev_name = "mesonstream";
		status = "okay";
		resets = <&clock GCLK_IDX_HIU_PARSER_TOP
			&clock GCLK_IDX_VPU_INTR
			&clock GCLK_IDX_DEMUX
			&clock GCLK_IDX_DOS>;
		reset-names = "parser_top",
			"vpu_intr",
			"demux",
			"vdec";
	};

	ion_dev {
		compatible = "amlogic, ion_dev";
		memory-region = <&ion_reserved>;
	};

	vdec {
		compatible = "amlogic, vdec";
		memory-region = <&vdec_reserved>;
		dev_name = "vdec.0";
		status = "okay";
		interrupts = <0 3 1
			0 23 1
			0 32 1
			0 43 1
			0 44 1
			0 45 1>;
		interrupt-names = "vsync",
			"demux",
			"parser",
			"mailbox_0",
			"mailbox_1",
			"mailbox_2";
	};
	picdec {
		   compatible = "amlogic, picdec";
		   memory-region = <&picdec_reserved>;
		   dev_name = "picdec";
		   status = "okay";
	};
    ppmgr {
        compatible = "amlogic, ppmgr";//to match of_device_id's compatible member
        memory-region = <&ppmgr_reserved>;
        dev_name = "ppmgr";
        status = "okay";
    };
/*	vdin0 {
		compatible = "amlogic, vdin";
		memory-region = <&vdin0_reserved>;
		dev_name = "vdin0";
		status = "ok";
		reserve-iomap = "true";
		interrupts = <0 83 1>;
		vdin_id = <0>;
	};
	vdin {
		compatible = "amlogic, vdin";
		memory-region = <&vdin1_reserved>;
		dev_name = "vdin1";
		status = "ok";
		reserve-iomap = "true";
		interrupts = <0 85 1>;
		vdin_id = <1>;
	};*/
	amvdec_656in0 {
		compatible = "amlogic, amvdec_656in";
		dev_name = "amvdec_656in0";
		status = "ok";
		reg = <0x0 0xd0048000 0x0 0x7c>;
	};
	amvdec_656in1 {
		compatible = "amlogic, amvdec_656in";
		dev_name = "amvdec_656in1";
		status = "ok";
		reg = <0x0 0xd0050000 0x0 0x7c>;
	};

	amvenc_avc{
		compatible = "amlogic, amvenc_avc";
		//memory-region = <&amvenc_avc_reserved>;
		dev_name = "amvenc_avc";
		status = "okay";
		interrupts = <0 45 1>;
		interrupt-names = "mailbox_2";
	};


	vpu {
		compatible = "amlogic, vpu";
		dev_name = "vpu";
		status = "ok";
		clk_level = <7>;
		/**	0: 100.0M    1: 166.7M    2: 200.0M
			3: 250.0M    4: 333.3M    5: 400.0M
			6: 500.0M    7: 666.7M */
	};
	bt-dev{
		compatible = "amlogic, bt-dev";
		dev_name = "bt-dev";
		status = "ok";
		gpio_reset = <&gpio       GPIOX_20       GPIO_ACTIVE_HIGH>;
	};
	wifi{
		compatible = "amlogic, aml_broadcm_wifi";
		dev_name = "aml_broadcm_wifi";
		status = "okay";
		interrupt_pin = <&gpio       GPIOX_7       GPIO_ACTIVE_HIGH>;
		interrupts = <	0 68 4>;
		irq_trigger_type = "GPIO_IRQ_HIGH";
		power_on_pin = <&gpio       GPIOX_6       GPIO_ACTIVE_HIGH>;
		pinctrl-names = "wifi_32k_pins";
		pinctrl-0 = <&wifi_32k_pins>;
	};
    sd{
        compatible = "amlogic, aml_sd_emmc";
        dev_name = "aml_newsd.0";
        status = "okay";
        reg = <0x0 0xd0072000 0x0 0x2000>;
        interrupts = <	0 217 1
        				0 67 1
        				0 69 1>;
        pinctrl-names = "sd_clk_cmd_pins", "sd_all_pins";
        pinctrl-0 = <&sd_clk_cmd_pins>;
        pinctrl-1 = <&sd_all_pins>;
		sd{
	   		status = "okay";
	   		pinname = "sd";
	   		ocr_avail = <0x00200080>; // 3.3:0x200000, 1.8+3.3:0x00200080
	   		caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED",
	   				"MMC_CAP_SD_HIGHSPEED","MMC_CAP_UHS_SDR12",
	   				"MMC_CAP_UHS_SDR25","MMC_CAP_UHS_SDR50",
	   				"MMC_CAP_UHS_SDR104";
	   		f_min = <400000>;
	   		f_max = <100000000>;
	   		max_req_size = <0x20000>;          /**128KB*/
			gpio_dat3 = <&gpio       CARD_4       GPIO_ACTIVE_HIGH>;
			jtag_pin =  <&gpio       CARD_0       GPIO_ACTIVE_HIGH>;
			gpio_cd =  <&gpio       CARD_6       GPIO_ACTIVE_HIGH>;
	   		irq_in = <3>;
	   		irq_out = <5>;
	   		card_type = <5>; /* 0:unknown, 1:mmc card(include eMMC), 2:sd card(include tSD), 3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, 5:NON sdio device(means sd/mmc card), other:reserved */
		};
    };
	sdio{
		compatible = "amlogic, aml_sd_emmc";
		dev_name = "aml_newsd.0";
		status = "okay";
		reg = <0x0 0xd0070000 0x0 0x2000>;
		interrupts = <	0 216 4>;
		pinctrl-names =  "sdio_clk_cmd_pins", "sdio_all_pins";
		pinctrl-0 = <&sdio_clk_cmd_pins>;
		pinctrl-1 = <&sdio_all_pins>;
		sdio{
			status = "okay";
			pinname = "sdio";
			ocr_avail = <0x00200080>;  /*3.3:0x200000, 1.8+3.3:0x00200080 */
			caps = "MMC_CAP_4_BIT_DATA","MMC_CAP_MMC_HIGHSPEED",
				"MMC_CAP_SD_HIGHSPEED", "MMC_CAP_NONREMOVABLE",
				"MMC_CAP_UHS_SDR12","MMC_CAP_UHS_SDR25",
				"MMC_CAP_UHS_SDR50","MMC_CAP_UHS_SDR104",
				"MMC_PM_KEEP_POWER","MMC_CAP_SDIO_IRQ";
				f_min = <400000>;
				f_max = <200000000>;
				max_req_size = <0x20000>;          /**128KB*/
				card_type = <3>;  /*3:sdio device(ie:sdio-wifi), 4:SD combo (IO+mem) card, */
		};
	};
	nand{
		compatible = "amlogic, aml_nand";
		dev_name = "nand";
		status = "ok";
		reg = <0x0 0xd0074800 0x0 0x200>;
		interrupts = <	0 34 1 >;
		pinctrl-names = "nand_rb_mod","nand_norb_mod", "nand_cs_pins_only";
		pinctrl-0 = <&conf_nand_pulldown &conf_nand_pullup &all_nand_pins>;
		pinctrl-1 = <&conf_nand_pulldown &conf_nand_pullup &all_nand_pins>;
		pinctrl-2 = <&nand_cs_pins>;
		device_id = <0>;
		plat-names = "nandnormal";
		plat-num = <1>;
		plat-part-0 = <&normal>;
		normal: normal{
			enable_pad ="ce0","ce1","ce2","ce3";
			busy_pad = "rb0";
		};
	};
	amhdmitx: amhdmitx{
		compatible = "amlogic, amhdmitx";
		dev_name = "amhdmitx";
		status = "okay";
		pinctrl-names="hdmitx_hpd", "hdmitx_ddc";
		pinctrl-0=<&hdmitx_hpd>;
		pinctrl-1=<&hdmitx_ddc>;
		vend-data = <&vend_data>;
		/* HPD, 57 + 32 = 89; CEC, 151 + 32 = 183*/
		interrupts = <0 57 1>;
		interrupt-names = "hdmitx_hpd";
		clocks = <&clock CLK_HDMITX_SYS &clock CLK_HDMITX_ENCP
			&clock CLK_HDMITX_ENCI &clock CLK_HDMITX_PIXEL
			&clock CLK_HDMITX_PHY &clock CLK_VID>;
		clock-names = "hdmitx_clk_sys", "hdmitx_clk_encp", "hdmitx_clk_enci",
			"hdmitx_clk_pixel", "hdmitx_clk_phy", "hdmitx_clk_vid";

		vend_data: vend_data{
			compatible = "amlogic, amlogic-cec";
			status = "okay";
			vendor_name = "Amlogic"; /* Max Chars: 8     */
			vendor_id = <0x000000>; /* Refer to http://standards.ieee.org/develop/regauth/oui/oui.txt   */
			product_desc = "GXBB Mbox"; /* Max Chars: 16    */
			cec_osd_string = "MBox"; /* Max Chars: 14    */
			interrupts = <0 199 1>;
			interrupt-names = "hdmitx_cec";
			pinctrl-names = "hdmitx_aocec";
			pinctrl-0=<&hdmitx_aocec>;
		};
	};

	uart_AO: serial@c81004c0 {
		compatible = "amlogic, meson-uart";
		reg = <0x0 0xc81004c0 0x0 0x14>;
		interrupts = <0 193 1>;
		status = "okay";
		clocks = <&clock CLK_XTAL>;
		clock-names = "clk_uart";
		fifosize = < 64 >;
		pinctrl-names = "default";
		pinctrl-0 = <&ao_uart_pins>;
	};
	uart_A: serial@c11084c0 {
		compatible = "amlogic, meson-uart";
		reg = <0x0 0xc11084c0 0x0 0x14>;
		interrupts = <0 26 1>;
		status = "okay";
		clocks = <&clock CLK_XTAL>;
		clock-names = "clk_uart";
		fifosize = < 128 >;
		pinctrl-names = "default";
		pinctrl-0 = <&a_uart_pins>;
	};


	canvas{
		compatible = "amlogic, meson, canvas";
		dev_name = "amlogic-canvas";
		status = "ok";
		reg = <0x0 0xc8838000 0x0 0x400>;
	};

	dwc2_b {
		compatible = "amlogic,dwc2";
		reg = <0x0 0xc9100000 0x0 0x40000>;
		interrupts = <0 31 4>;
		status = "okay";
		pl-periph-id = <1>; /** lm name */
		clock-src = "usb1"; /** clock src */
		port-id = <1>;   /** ref to mach/usb.h */
		port-type = <1>;	/** 0: otg, 1: host, 2: slave */
		port-speed = <0>; /** 0: default, 1: high, 2: full */
		port-config = <0>; /** 0: default */
		port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
		port-id-mode = <1>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
		phy-reg = <0xc0000020>;
		phy-reg-size = <0x20>;
		usb-fifo = <1024>;
		host-only-core = <1>;
		pmu-apply-power = <1>;
		cpu-type = "gxbaby";
		resets = <&clock GCLK_IDX_USB_GENERAL
					&clock GCLK_IDX_MISC_USB1_TO_DDR
					&clock GCLK_IDX_USB1>;
		reset-names = "usb_general",
						"usb1",
						"usb1_to_ddr";
	};

	dwc2_a {
		compatible = "amlogic,dwc2";
		reg = <0x0 0xc9000000 0x0 0x40000>;
		interrupts = <0 30 4>;
		status = "okay";
		pl-periph-id = <0>; /** lm name */
		clock-src = "usb0"; /** clock src */
		port-id = <0>;  /** ref to mach/usb.h */
		port-type = <0>;	/** 0: otg, 1: host, 2: slave */
		port-speed = <0>; /** 0: default, high, 1: full */
		port-config = <0>; /** 0: default */
		port-dma = <0>; /** 0: default, 1: single, 2: incr, 3: incr4, 4: incr8, 5: incr16, 6: disable*/
		port-id-mode = <0>; /** 0: hardware, 1: sw_host, 2: sw_slave*/
		gpio-vbus-power = "GPIODV_24";
		gpios = <&gpio       GPIODV_24       GPIO_ACTIVE_HIGH>;
		gpio-work-mask	= <1>; /**0: work on pulldown,1:work on pullup*/
		phy-reg = <0xc0000000>;
		phy-reg-size = <0x20>;
		usb-fifo = <1024>;
		cpu-type = "gxbaby";
		resets = <&clock GCLK_IDX_USB_GENERAL
					    &clock GCLK_IDX_MISC_USB0_TO_DDR
              &clock GCLK_IDX_USB0>;
		reset-names = "usb_general",
						"usb0",
						"usb0_to_ddr";
	};

	/* AUDIO MESON8 DEVICES */
	i2s_dai: I2S {
		#sound-dai-cells = <0>;
		resets = <
			&clock GCLK_IDX_AIU_AI_TOP_GLUE
			&clock GCLK_IDX_AUD_BUF_ABD
			&clock GCLK_IDX_AIU_I2S_OUT
			&clock GCLK_IDX_AIU_AMCLK_MEASURE
			&clock GCLK_IDX_AIU_AIFIFO2
			&clock GCLK_IDX_AIU_AUD_MIXER
			&clock GCLK_IDX_AIU_MIXER_REG
			&clock GCLK_IDX_AIU_ADC
			&clock GCLK_IDX_AIU_TOP_LEVEL
			&clock GCLK_IDX_AIU_AOCLK
			&clock GCLK_IDX_AUD_IN
		>;
		reset-names =
			"top_glue",
			"aud_buf",
			"i2s_out",
			"amclk_measure",
			"aififo2",
			"aud_mixer",
			"mixer_reg",
			"adc",
			"top_level",
			"aoclk",
			"aud_in";
		compatible = "amlogic, aml-i2s-dai";
	};
	spdif_dai: SPDIF {
		#sound-dai-cells = <0>;
		compatible = "amlogic, aml-spdif-dai";
		resets = <
			&clock GCLK_IDX_AIU_IEC958
			&clock GCLK_IDX_AIU_ICE958_AMCLK
		>;
		reset-names =
			"iec958",
			"iec958_amclk";
	};
	pcm_dai: PCM {
		#sound-dai-cells = <0>;
		compatible = "amlogic, aml-pcm-dai";
	};
	i2s_plat: i2s_platform {
		compatible = "amlogic, aml-i2s";
	};
	pcm_plat: pcm_platform {
		compatible = "amlogic, aml-pcm";
	};
	spdif_codec: spdif_codec{
		#sound-dai-cells = <0>;
		compatible = "amlogic, aml-spdif-codec";
		pinctrl-names = "aml_audio_spdif";
		pinctrl-0 = <&audio_spdif_pins>;
	};
	pcm_codec: pcm_codec{
		#sound-dai-cells = <0>;
		compatible = "amlogic, pcm2BT-codec";
	};
	/* endof AUDIO MESON8 DEVICES */

	/* AUDIO board specific */
	dummy_codec:dummy{
		#sound-dai-cells = <0>;
		compatible = "amlogic, aml_dummy_codec";
		status = "okay";
	};
	aml_m8_snd {
		compatible = "aml, aml_snd_m8";
		status = "okay";
		aml-sound-card,format = "i2s";
		aml_sound_card,name = "AML-M8AUDIO";
		aml,audio-routing =
				"Ext Spk","LOUTL",
				"Ext Spk","LOUTR";

		mute_gpio-gpios = <&gpio GPIOH_3 0>;
		hp_disable;
		hp_paraments = <800 300 0 5 1>;
		pinctrl-names = "aml_snd_m8";
		pinctrl-0 = <&audio_pins>;
		cpu_list = <&cpudai0 &cpudai1 &cpudai2>;
		codec_list = <&codec0 &codec1 &codec2>;
		plat_list = <&i2s_plat &i2s_plat &pcm_plat>;
		cpudai0: cpudai0 {
			sound-dai = <&i2s_dai>;
		};
		cpudai1: cpudai1 {
			sound-dai = <&spdif_dai>;
		};
		cpudai2: cpudai2 {
			sound-dai = <&pcm_dai>;
		};
		codec0: codec0 {
			sound-dai = <&dummy_codec>;
		};
		codec1: codec1 {
			sound-dai = <&spdif_codec>;
		};
		codec2: codec2 {
			sound-dai = <&pcm_codec>;
		};
	};
	/* END OF AUDIO board specific */
};
